1	工具介绍
1.1	来源
DPDK官方发布的开源工具，在DPDK官网开源下载源码http://dpdk.org/
1.2	定位
发包工具，一定程度上可以取代物理发包仪器（tesgine、思伯伦等）；
可与DPDK自带的转发工具testpmd配套使用，搭建数据流测试环境。
1.3	功能介绍
支持IPV4、IPV6
支持UDP、TCP
支持设置发包速率、发包数量、包长、目的mac、本端mac、目的IP、本端IP、VLAN等
支持QinQ报文、支持ARP、ICMP；
支持填充报文内容
使用说明参考：http://pktgen-dpdk.readthedocs.io/en/latest/commands.html#runtime-options-and-commands
2	工具编译
该工具依赖DPDK源码配套编译，所以先编译DPDK，再编译pktgen
2.1	DPDK编译
●从官网下载源码，拷贝至编译服务器，解压
 
●Enable pcap (libpcap headers are required).
make config T=x86_64-native-linuxapp-gcc
●编译
make
也可以直接使用/tools/dpdk-setup.sh脚本选择“x86_64-native-linuxapp-gcc”选项进行编译。
常见编译失败：
报错：fatal error: infiniband/verbs.h: No such file or directory
编译环境驱动没安装正确，官网下载驱动，执行./install –dpdk安装即可。
2.2	Pktgen编译
●官网下载源码，拷贝至编译服务器，解压
 
●配置DPDK路径
export RTE_SDK=<DPDKInstallDir>
export RTE_TARGET=x86_64-native-linuxapp-gcc
●编译
在编译完DPDK之后，配置环境变量，在pktgen源码解压目录执行make编译即可
Make
3	工具使用
3.1	二进制依赖
在编译环境编译好二进制文件之后，需要提取两个文件拿到测试环境使用即可：
一个是pktgen二进制文件：./app/app/x86_64-native-linuxapp-gcc/pktgen
另一个是配置文件： ./Pktgen.lua
两个文件放在同一个目录执行即可。
运行环境的几个库需要和编译时使用的一致:
 
3.2	启动命令行参数
启动参数类似testpmd，以下是一个样例：
./ pktgen -c 0xff -n 4 -w 00:11.0 -- -T -P -m"[1:2].0,[3:4].1"
参数解释：
1、2号CPU绑定端口0；3、4号CPU绑定端口1；
3.2.1	-c 参数
CPU掩码，表示可使用的CPU，要覆盖实际使用的CPU；比如使用编号为2,3CPU，-c参数可以为-0xf （或-c f）
3.2.2	–n参数
内存通道数，根据实际OS环境选择，当前sigma的单板使用的OS都是四个通道
3.2.3	–w参数
指定要运行pktgen的PCI网卡，比如0000:05:00.0
3.2.4	–T参数
使能彩色打印
3.2.5	–P参数
对所有端口使能混杂模式
3.2.6	–m参数
CPU绑核的参数，对性能测试影响很大
BNF: (or kind of BNF)
<matrix-string>   := """ <lcore-port> { "," <lcore-port>} """
<lcore-port>      := <lcore-list> "." <port-list>
<lcore-list>      := "[" <rx-list> ":" <tx-list> "]"
<port-list>       := "[" <rx-list> ":" <tx-list>"]"
<rx-list>         := <num> { "/" (<num> | <list>) }
<tx-list>         := <num> { "/" (<num> | <list>) }
<list>            := <num> { "/" (<range> | <list>) }
<range>           := <num> "-" <num> { "/" <range> }
<num>             := <digit>+
<digit>           := 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

For example:
1.0, 2.1, 3.2                 - core 1 handles port 0 rx/tx,
                                core 2 handles port 1 rx/tx
                                core 3 handles port 2 rx/tx
1.[0-2], 2.3, ...             - core 1 handle ports 0,1,2 rx/tx,
                                core 2 handle port 3 rx/tx
[0-1].0, [2/4-5].1, ...       - cores 0-1 handle port 0 rx/tx,
                                cores 2,4,5 handle port 1 rx/tx
[1:2].0, [4:6].1, ...         - core 1 handles port 0 rx,
                                core 2 handles port 0 tx,
[1:2].[0-1], [4:6].[2/3], ... - core 1 handles port 0 & 1 rx,
                                core 2 handles port  0 & 1 tx
[1:2-3].0, [4:5-6].1, ...     - core 1 handles port 0 rx, cores 2,3 handle port 0 tx
                                core 4 handles port 1 rx & core 5,6 handles port 1 tx
[1-2:3].0, [4-5:6].1, ...     - core 1,2 handles port 0 rx, core 3 handles port 0 tx
                                core 4,5 handles port 1 rx & core 6 handles port 1 tx
[1-2:3-5].0, [4-5:6/8].1, ... - core 1,2 handles port 0 rx, core 3,4,5 handles port 0 tx
                                core 4,5 handles port 1 rx & core 6,8 handles port 1 tx
[1:2].[0:0-7], [3:4].[1:0-7], - core 1 handles port 0 rx, core 2 handles ports 0-7 tx
                                core 3 handles port 1 rx & core 4 handles port 0-7 tx
BTW: you can use "{}" instead of "[]" as it does not matter to the syntax.
3.3	运行配置参数
3.3.1	启动，停止命令
Start 0  启动端口0发包
Stop 0 停止端口0发包
Start 1 启动端口1发包
Stop 1 停止端口1发包
Start all 或str 启动所有端口发包
Stop all 或stp 停止所有端口发包
备注：启动pktgen后端口默认up，已经具备收包状态；
3.3.2	端口配置
Set 0/1/all count 100 设置端口0/1/all的发包数量为100（设置为0表示持续发包）  
Set 0/1/all size 512  设置端口0/1/all的发包包长为512字节
Set 0/1/all rate 90  设置端口0/1/all的发包速率为90%
Set 0/1/all burst 128  设置端口0/1/all的发包busrt值为128
Set 0/1/all tx_cycles  ?
Set 0/1/all sport 1314  设置端口0/1/all的tcp源端口号为1314
Set 0/1/all dport 1516  设置端口0/1/all的tcp源端口号为1516
Set 0/1/all vlanid 200 设置端口0/1/all的vlanID为200
3.3.3	其他配置命令
Load dir  加载配置文件
Save dir 保存配置文件(文件内容是文本，建议保存为.lua脚本)
off              Alias : disable screen
  on               Alias : enable screen
  debug            Command : debug commands
  set              Command : set a number of options
  pcap             Command : pcap commands
  stp              Alias : stop all
  str              Alias : start all
  stop             Command : stop features
  start            Command : start features
  disable          Command : disable features
  enable           Command : enable features
  range            Command : Range commands（这个enable之后可以设置报文VLAN，包长，源MAC，目的MAC，源IP，目的IP在指定范围内循环变动。测试多队列必须使能！）
  theme            Command : Set, save, show the theme
  page             Command : change page displays
  seq              Alias : sequence
  sequence         Command : sequence command
  ping4            Command : Send a ping packet for IPv4
  port             Command : Switch between ports
  restart          Command : restart port
  rst              Alias : reset all
  reset            Command : reset pktgen configuration
  cls              Alias : redisplay
  redisplay        Command : redisplay the screen
  save             Command : save the current state
  lua              Command : execute a Lua string
  script           Command : run a Lua script
  load             Command : load command file
  geom             Alias : geometry
  geometry         Command : set the screen geometry
  clr              Alias : clear.stats all
  clear.stats      Command : clear stats
  help             Command : help command
3.4	使用技巧
第一次启动，手动配置常用的参数，然后用save命令把配置保存到.lua格式脚本中；
下次启动使用-f 参数加载配置文件即可。
参考配置文件：
 

3.5	调测问题记录
3.5.1	设置目的mac
在3.1.2版本无法使用”set 0 dst mac xx:xx:xx:xx:xx:xx”设置目的mac，使用3.3.8版本就可以。
3.5.2	设置包长
默认最小包长是64字节，最大包长是1518字节；

example
--
-- Pktgen - Ver: 3.1.2 (DPDK 16.11.0)
-- Copyright (c) <2010-2016>, Intel Corporation. All rights reserved., Powered by Intel® DPDK

-- Command line arguments: (DPDK args are defaults)
-- ./pktgen -c ff -n 3 -m 512 --proc-type primary -- -T -P -m[1:2].0,[3:4].1 

-- #######################################################################
-- Pktgen Configuration script information:
--   GUI socket is Not Enabled
--   Flags 00000804
--   Number of ports: 2
--   Number ports per page: 4
--   Number descriptors: RX 512 TX: 1024
--   Promiscuous mode is Enabled


--#######################################################################
-- Global configuration:
-- geometry 132x44
pktgen.mac_from_arp("disable");

-- ######################### Port  0 ##################################
-- 
-- Port:  0, Burst: 32, Rate: 40%, Flags:00000000, TX Count:5000000
--           SeqCnt:0, Prime:1 VLAN ID:0001, Link: <UP-40000-FD>
--
-- Set up the primary port information:
pktgen.set('0', 'count', 5000000);
pktgen.set('0', 'size', 512);
pktgen.set('0', 'rate', 40);
pktgen.set('0', 'burst', 32);
pktgen.set('0', 'sport', 1234);
pktgen.set('0', 'dport', 5678);
pktgen.set('0', 'prime', 1);
pktgen.set_type('0', 'ipv4');
pktgen.set_proto('0', 'tcp');
pktgen.set_ipaddr('0', 'dst', '192.168.1.1');
pktgen.set_ipaddr('0', 'src','192.168.0.1/24');
pktgen.set_mac('0', '20:17:08:18:14:30');
pktgen.vlanid('0', 888);

pktgen.pattern('0', 'abc');

pktgen.jitter('0', 50);
pktgen.mpls('0', 'disable');
pktgen.mpls_entry('0', '0');
pktgen.qinq('0', 'disable');
pktgen.qinqids('0', 0, 0);
pktgen.gre('0', 'disable');
pktgen.gre_eth('0', 'disable');
pktgen.gre_key('0', 0);
--
-- Port flag values:
pktgen.icmp_echo('0', 'disable');
pktgen.pcap('0', 'disable');
pktgen.set_range('0', 'enable');
pktgen.latency('0', 'disable');
pktgen.process('0', 'disable');
pktgen.capture('0', 'disable');
pktgen.rxtap('0', 'disable');
pktgen.txtap('0', 'disable');
pktgen.vlan('0', 'enable');

--
-- Range packet information:
pktgen.src_mac('0', 'start', '20:17:08:18:14:30');
pktgen.src_mac('0', 'min', '00:00:00:00:00:00');
pktgen.src_mac('0', 'max', '00:00:00:00:00:00');
pktgen.src_mac('0', 'inc', '00:00:00:00:00:00');
pktgen.dst_mac('0', 'start', '20:17:08:18:14:31');
pktgen.dst_mac('0', 'min', '00:00:00:00:00:00');
pktgen.dst_mac('0', 'max', '00:00:00:00:00:00');
pktgen.dst_mac('0', 'inc', '00:00:00:00:00:00');

pktgen.src_ip('0', 'start', '192.168.0.1');
pktgen.src_ip('0', 'min', '192.168.0.1');
pktgen.src_ip('0', 'max', '192.168.0.254');
pktgen.src_ip(';0', 'inc', '0.0.0.0');

pktgen.dst_ip('0', 'start', '192.168.1.1');
pktgen.dst_ip('0', 'min', '192.168.1.1');
pktgen.dst_ip('0', 'max', '192.168.1.254');
pktgen.dst_ip('0', 'inc', '0.0.0.0');

pktgen.ip_proto('0', 'tcp');

pktgen.src_port('0', 'start', 0);
pktgen.src_port('0', 'min', 0);
pktgen.src_port('0', 'max', 254);
pktgen.src_port('0', 'inc', 0);

pktgen.dst_port('0', 'start', 0);
pktgen.dst_port('0', 'min', 0);
pktgen.dst_port('0', 'max', 254);
pktgen.dst_port('0', 'inc', 0);

pktgen.vlan_id('0', 'start', 1);
pktgen.vlan_id('0', 'min', 1);
pktgen.vlan_id('0', 'max', 4095);
pktgen.vlan_id('0', 'inc', 0);

pktgen.pkt_size('0', 'start', 64);
pktgen.pkt_size('0', 'min', 64);
pktgen.pkt_size('0', 'max', 1518);
pktgen.pkt_size('0', 'inc', 0);

--
-- Set up the sequence data for the port.
pktgen.set('0', 'seqCnt', 0);


-- ######################### Port  1 ##################################
-- 
-- Port:  1, Burst: 32, Rate: 40%, Flags:00000000, TX Count:5000000
--           SeqCnt:0, Prime:1 VLAN ID:0001, Link: <UP-40000-FD>
--
-- Set up the primary port information:
pktgen.set('1', 'count', 5000000);
pktgen.set('1', 'size', 512);
pktgen.set('1', 'rate', 40);
pktgen.set('1', 'burst', 32);
pktgen.set('1', 'sport', 1234);
pktgen.set('1', 'dport', 5678);
pktgen.set('1', 'prime', 1);
pktgen.set_type('1', 'ipv4');
pktgen.set_proto('1', 'tcp');
pktgen.set_ipaddr('1', 'dst', '192.168.0.1');
pktgen.set_ipaddr('1', 'src','192.168.1.1/24');
pktgen.set_mac('1', '20:17:08:18:14:31');
pktgen.vlanid('1', 888);

pktgen.pattern('1', 'abc');

pktgen.jitter('1', 50);
pktgen.mpls('1', 'disable');
pktgen.mpls_entry('1', '0');
pktgen.qinq('1', 'disable');
pktgen.qinqids('1', 0, 0);
pktgen.gre('1', 'disable');
pktgen.gre_eth('1', 'disable');
pktgen.gre_key('1', 0);
--
-- Port flag values:
pktgen.icmp_echo('1', 'disable');
pktgen.pcap('1', 'disable');
pktgen.set_range('1', 'enable');
pktgen.latency('1', 'disable');
pktgen.process('1', 'disable');
pktgen.capture('1', 'disable');
pktgen.rxtap('1', 'disable');
pktgen.txtap('1', 'disable');
pktgen.vlan('1', 'enable');

--
-- Range packet information:
pktgen.src_mac('1', 'start', '20:17:08:18:14:31');
pktgen.src_mac('1', 'min', '00:00:00:00:00:00');
pktgen.src_mac('1', 'max', '00:00:00:00:00:00');
pktgen.src_mac('1', 'inc', '00:00:00:00:00:00');
pktgen.dst_mac('1', 'start', '20:17:08:18:14:30');
pktgen.dst_mac('1', 'min', '00:00:00:00:00:00');
pktgen.dst_mac('1', 'max', '00:00:00:00:00:00');
pktgen.dst_mac('1', 'inc', '00:00:00:00:00:00');

pktgen.src_ip('1', 'start', '192.168.1.1');
pktgen.src_ip('1', 'min', '192.168.1.1');
pktgen.src_ip('1', 'max', '192.168.1.254');
pktgen.src_ip(';1', 'inc', '0.0.0.0');

pktgen.dst_ip('1', 'start', '192.168.2.1');
pktgen.dst_ip('1', 'min', '192.168.2.1');
pktgen.dst_ip('1', 'max', '192.168.2.254');
pktgen.dst_ip('1', 'inc', '0.0.0.0');

pktgen.ip_proto('1', 'tcp');

pktgen.src_port('1', 'start', 256);
pktgen.src_port('1', 'min', 256);
pktgen.src_port('1', 'max', 510);
pktgen.src_port('1', 'inc', 1);

pktgen.dst_port('1', 'start', 256);
pktgen.dst_port('1', 'min', 256);
pktgen.dst_port('1', 'max', 510);
pktgen.dst_port('1', 'inc', 1);

pktgen.vlan_id('1', 'start', 1);
pktgen.vlan_id('1', 'min', 1);
pktgen.vlan_id('1', 'max', 4095);
pktgen.vlan_id('1', 'inc', 0);

pktgen.pkt_size('1', 'start', 64);
pktgen.pkt_size('1', 'min', 64);
pktgen.pkt_size('1', 'max', 1518);
pktgen.pkt_size('1', 'inc', 0);

--
-- Set up the sequence data for the port.
pktgen.set('1', 'seqCnt', 0);


-- ################################ Done #################################
